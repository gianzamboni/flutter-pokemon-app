// Mocks generated by Mockito 5.4.6 from annotations
// in pokeapp/test/providers/favourite_pokemons_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:pokeapp/models/pokemon.dart' as _i2;
import 'package:pokeapp/models/user_session.dart' as _i6;
import 'package:pokeapp/services/favrourite_pokemon_service.dart' as _i3;
import 'package:pokeapp/services/local_storage_service.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePokemon_0 extends _i1.SmartFake implements _i2.Pokemon {
  _FakePokemon_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [FavouritePokemonService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFavouritePokemonService extends _i1.Mock
    implements _i3.FavouritePokemonService {
  @override
  _i4.Future<List<_i2.Pokemon>> getFavouritePokemons(String? token) =>
      (super.noSuchMethod(
            Invocation.method(#getFavouritePokemons, [token]),
            returnValue: _i4.Future<List<_i2.Pokemon>>.value(<_i2.Pokemon>[]),
            returnValueForMissingStub: _i4.Future<List<_i2.Pokemon>>.value(
              <_i2.Pokemon>[],
            ),
          )
          as _i4.Future<List<_i2.Pokemon>>);

  @override
  _i4.Future<_i2.Pokemon> addFavouritePokemon(String? token, int? pokemonId) =>
      (super.noSuchMethod(
            Invocation.method(#addFavouritePokemon, [token, pokemonId]),
            returnValue: _i4.Future<_i2.Pokemon>.value(
              _FakePokemon_0(
                this,
                Invocation.method(#addFavouritePokemon, [token, pokemonId]),
              ),
            ),
            returnValueForMissingStub: _i4.Future<_i2.Pokemon>.value(
              _FakePokemon_0(
                this,
                Invocation.method(#addFavouritePokemon, [token, pokemonId]),
              ),
            ),
          )
          as _i4.Future<_i2.Pokemon>);

  @override
  _i4.Future<List<_i2.Pokemon>> swapFavouritePokemons(
    String? token,
    int? index1,
    int? index2,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#swapFavouritePokemons, [token, index1, index2]),
            returnValue: _i4.Future<List<_i2.Pokemon>>.value(<_i2.Pokemon>[]),
            returnValueForMissingStub: _i4.Future<List<_i2.Pokemon>>.value(
              <_i2.Pokemon>[],
            ),
          )
          as _i4.Future<List<_i2.Pokemon>>);

  @override
  _i4.Future<void> deleteFavouritePokemon(String? token, int? index) =>
      (super.noSuchMethod(
            Invocation.method(#deleteFavouritePokemon, [token, index]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}

/// A class which mocks [LocalStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalStorageService extends _i1.Mock
    implements _i5.LocalStorageService {
  @override
  _i4.Future<void> saveUserSession(_i6.UserSession? userSession) =>
      (super.noSuchMethod(
            Invocation.method(#saveUserSession, [userSession]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<_i6.UserSession?> getUserSession() =>
      (super.noSuchMethod(
            Invocation.method(#getUserSession, []),
            returnValue: _i4.Future<_i6.UserSession?>.value(),
            returnValueForMissingStub: _i4.Future<_i6.UserSession?>.value(),
          )
          as _i4.Future<_i6.UserSession?>);

  @override
  _i4.Future<void> clear() =>
      (super.noSuchMethod(
            Invocation.method(#clear, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}
